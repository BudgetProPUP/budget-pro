version: '3.9'

services:
  # --- Authentication Service ---
  auth_db:
    image: postgres:15-alpine
    container_name: auth_db
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=budgetpro_auth
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=a4d
    ports:
      - "5433:5432"
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth_service:
    build: ./auth_service
    container_name: auth_service
    volumes:
      - ./auth_service:/app
    ports:
      - "8001:8000"
    env_file:
      - ./auth_service/.env.docker
    depends_on:
      auth_db:
        condition: service_healthy
    networks:
      - my_network

  # --- Budget Service ---
  budget_db:
    image: postgres:15-alpine
    container_name: budget_db
    volumes:
      - postgres_budget_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=budgetpro_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=a4d
    ports:
      - "5432:5432"
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  budget_service:
    build: ./backend
    container_name: budget_service
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env.docker
    depends_on:
      budget_db:
        condition: service_healthy
      auth_service:
        condition: service_started
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  postgres_auth_data:
  postgres_budget_data: